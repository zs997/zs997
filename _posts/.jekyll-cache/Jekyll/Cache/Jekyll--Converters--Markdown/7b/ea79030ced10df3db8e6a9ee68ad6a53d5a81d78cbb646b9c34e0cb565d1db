I"<h1 id="题目描述">题目描述</h1>
<p>给定一个链表，删除链表的倒数第n个节点并返回链表的头指针
例如，
   给出的链表为:1-&gt;2-&gt;3-&gt;4-&gt;5, n= 2.↵↵   删除了链表的倒数第n个节点之后,链表变为1-&gt;2-&gt;3-&gt;5.
备注：
题目保证n一定是合法的
请尝试只用一步操作完成该功能</p>
<h1 id="分析">分析</h1>
<ul>
  <li>删除倒数第n个节点可用快慢指针，速度相差n,快指针指到末尾时，慢指针指到要删除的前一个节点</li>
  <li>同时，要考虑倒数第n个节点可能是头结点。可以设置在头部先插入一个节点，方便操作。
    <h1 id="java代码">java代码</h1>
    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
 <span class="kd">public</span> <span class="nc">ListNode</span> <span class="nf">removeNthFromEnd</span><span class="o">(</span><span class="nc">ListNode</span> <span class="n">head</span><span class="o">,</span> <span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">head</span> <span class="o">==</span> <span class="kc">null</span><span class="o">){</span><span class="k">return</span> <span class="n">head</span><span class="o">;}</span>
     <span class="c1">//if(head.next == null &amp;&amp;n ==1){ return null;}</span>
     <span class="nc">ListNode</span> <span class="nc">Dump</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ListNode</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
     <span class="nc">Dump</span><span class="o">.</span><span class="na">next</span> <span class="o">=</span> <span class="n">head</span><span class="o">;</span>        
     <span class="nc">ListNode</span> <span class="n">p1</span> <span class="o">=</span> <span class="nc">Dump</span><span class="o">;</span>
     <span class="nc">ListNode</span> <span class="n">p2</span> <span class="o">=</span> <span class="nc">Dump</span><span class="o">;</span>
     <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
        <span class="n">p1</span> <span class="o">=</span> <span class="n">p1</span><span class="o">.</span><span class="na">next</span><span class="o">;</span> 
     <span class="o">}</span>
     <span class="k">while</span><span class="o">(</span><span class="n">p1</span><span class="o">.</span><span class="na">next</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">){</span>
         <span class="n">p1</span> <span class="o">=</span> <span class="n">p1</span><span class="o">.</span><span class="na">next</span><span class="o">;</span>
         <span class="n">p2</span> <span class="o">=</span> <span class="n">p2</span><span class="o">.</span><span class="na">next</span><span class="o">;</span>
     <span class="o">}</span>
     <span class="n">p2</span><span class="o">.</span><span class="na">next</span> <span class="o">=</span> <span class="n">p2</span><span class="o">.</span><span class="na">next</span><span class="o">.</span><span class="na">next</span><span class="o">;</span>
     <span class="k">return</span> <span class="nc">Dump</span><span class="o">.</span><span class="na">next</span><span class="o">;</span>
 <span class="o">}</span>
<span class="o">}</span>
</code></pre></div>    </div>
  </li>
</ul>
:ET