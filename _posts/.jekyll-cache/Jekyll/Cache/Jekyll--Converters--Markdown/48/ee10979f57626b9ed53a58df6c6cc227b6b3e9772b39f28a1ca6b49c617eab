I"&<h1 id="题目描述">题目描述</h1>
<p>给出一个有n个元素的数组S，S中是否有元素a,b,c满足a+b+c=0？找出数组S中所有满足条件的三元组。
注意：
三元组（a、b、c、d）中的元素必须按非降序排列。（即a≤b≤c）
解集中不能包含重复的四元组。
    例如，给定的数组 S = {-1 0 1 2 -1 -4},↵↵    解集为：↵    (-1, 0, 1)↵    (-1, -1, 2)</p>
<h1 id="分析">分析</h1>
<ul>
  <li>要先将数组排序</li>
  <li>使用三个指针 遍历</li>
  <li>为了移动指针不产生重复项，编写安全移动函数
    <h1 id="java-代码">java 代码</h1>
    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
 <span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
  <span class="kd">public</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;&gt;</span> <span class="nf">threeSum</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">num</span><span class="o">)</span> <span class="o">{</span>
      <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;&gt;</span> <span class="n">res</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
      <span class="k">if</span><span class="o">(</span><span class="n">num</span> <span class="o">==</span> <span class="kc">null</span><span class="o">||</span><span class="n">num</span><span class="o">.</span><span class="na">length</span> <span class="o">&lt;=</span> <span class="mi">2</span><span class="o">){</span><span class="k">return</span> <span class="n">res</span><span class="o">;}</span>
      <span class="kt">int</span> <span class="n">len</span> <span class="o">=</span> <span class="n">num</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
      <span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>
      <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>        
      <span class="k">while</span><span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">len</span> <span class="o">-</span> <span class="mi">2</span><span class="o">){</span>
          <span class="kt">int</span> <span class="n">left</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">;</span>
          <span class="kt">int</span> <span class="n">right</span> <span class="o">=</span> <span class="n">len</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span>
          <span class="kt">int</span> <span class="n">base</span> <span class="o">=</span> <span class="n">num</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
          <span class="k">while</span><span class="o">(</span><span class="n">left</span> <span class="o">&lt;</span> <span class="n">right</span><span class="o">){</span>
              <span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="n">base</span><span class="o">+</span><span class="n">num</span><span class="o">[</span><span class="n">left</span><span class="o">]+</span><span class="n">num</span><span class="o">[</span><span class="n">right</span><span class="o">];</span>
              <span class="k">if</span><span class="o">(</span><span class="n">sum</span> <span class="o">==</span> <span class="mi">0</span><span class="o">){</span>
                  <span class="c1">//加入结果集</span>
                  <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">temp</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
                  <span class="n">temp</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">base</span><span class="o">);</span>
                  <span class="n">temp</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">num</span><span class="o">[</span><span class="n">left</span><span class="o">]);</span>
                  <span class="n">temp</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">num</span><span class="o">[</span><span class="n">right</span><span class="o">]);</span>
                  <span class="n">res</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">temp</span><span class="o">);</span>
                  <span class="n">left</span> <span class="o">=</span>  <span class="n">moveRight</span><span class="o">(</span><span class="n">left</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span><span class="n">num</span><span class="o">);</span>
                  <span class="n">right</span> <span class="o">=</span> <span class="n">moveLeft</span><span class="o">(</span><span class="n">right</span><span class="o">-</span><span class="mi">1</span><span class="o">,</span><span class="n">num</span><span class="o">);</span>
              <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">sum</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="o">){</span>
                  <span class="c1">//left ++;</span>
               <span class="n">left</span> <span class="o">=</span>  <span class="n">moveRight</span><span class="o">(</span><span class="n">left</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span><span class="n">num</span><span class="o">);</span>
              <span class="o">}</span><span class="k">else</span><span class="o">{</span>
                 <span class="c1">// right --;</span>
                  <span class="n">right</span> <span class="o">=</span> <span class="n">moveLeft</span><span class="o">(</span><span class="n">right</span><span class="o">-</span><span class="mi">1</span><span class="o">,</span><span class="n">num</span><span class="o">);</span>
              <span class="o">}</span>
          <span class="o">}</span>
        <span class="c1">//  i++;</span>
         <span class="n">i</span> <span class="o">=</span> <span class="n">moveRight</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span><span class="n">num</span><span class="o">);</span>
      <span class="o">}</span>
        
     
      <span class="k">return</span> <span class="n">res</span><span class="o">;</span>
  <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">moveLeft</span><span class="o">(</span><span class="kt">int</span> <span class="n">right</span><span class="o">,</span><span class="kt">int</span> <span class="n">num</span> <span class="o">[]){</span>
        <span class="k">while</span><span class="o">(</span><span class="n">right</span> <span class="o">==</span> <span class="n">num</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span> <span class="o">||(</span><span class="n">right</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">num</span><span class="o">[</span><span class="n">right</span><span class="o">+</span><span class="mi">1</span><span class="o">]==</span> <span class="n">num</span><span class="o">[</span><span class="n">right</span><span class="o">])){</span>
            <span class="n">right</span> <span class="o">--;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">right</span><span class="o">;</span>
    <span class="o">}</span>
   <span class="kd">public</span> <span class="kt">int</span> <span class="nf">moveRight</span><span class="o">(</span><span class="kt">int</span> <span class="n">left</span><span class="o">,</span><span class="kt">int</span> <span class="n">num</span> <span class="o">[]){</span>
         <span class="k">while</span><span class="o">(</span><span class="n">left</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">||(</span><span class="n">left</span> <span class="o">&lt;</span> <span class="n">num</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">num</span><span class="o">[</span><span class="n">left</span><span class="o">-</span><span class="mi">1</span><span class="o">]==</span> <span class="n">num</span><span class="o">[</span><span class="n">left</span><span class="o">])){</span>
            <span class="n">left</span> <span class="o">++;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">left</span><span class="o">;</span>
   <span class="o">}</span>
<span class="o">}</span>
</code></pre></div>    </div>
  </li>
</ul>
:ET